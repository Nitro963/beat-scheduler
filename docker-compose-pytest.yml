version: "3.8"

networks:
  compose-pytest-network:
    driver: bridge

services:
  db:
    container_name: pytest-mysql
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - compose-pytest-network
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci' ]
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  rabbitmq:
    container_name: pytest-amqp
    image: rabbitmq:management-alpine
    networks:
      - compose-pytest-network
    restart: unless-stopped
    volumes:
      - ./docker/etc/rabbitmq:/etc/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      retries: 3
      timeout: 5s

  redis:
    container_name: pytest-redis
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - ./docker/etc/redis:/etc/redis/
    networks:
      - compose-pytest-network
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "${REDIS_PASSWORD}"]
      retries: 3
      timeout: 5s

  web:
    build:
        context: .
        dockerfile: ./docker/Dockerfile-worker
    entrypoint: /pytest-entrypoint.sh
    container_name: ${DOCKER_PROJECT}-testing-server
    restart: unless-stopped
    volumes:
        - .:/server_code
    networks:
        - compose-pytest-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
      CELERY_APP: beat_scheduler
      LOG_LEVEL: WARNING
      WORKER_NAME: worker0
      WORKERS_QUEUES: "celery_default,celery_hello"
      WORKER_ACKS_LATE: 0
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB_NUMBER: ${REDIS_DB_NUMBER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
